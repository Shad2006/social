Метод initialize()
Назначение: Инициализация контроллера.
Описание:

Выполняет наследование родительского метода initialize() для базовой настройки контроллера.

Подключает модель Users через метод loadModel(), обеспечивая взаимодействие с таблицей пользователей в БД.

**2. Метод login()
Назначение: Обработка аутентификации пользователя.
Логика работы:

Проверка типа запроса: Активен только для HTTP POST.

Валидация входных данных:

Проверка наличия email (вывод ошибки Введите email при пустом значении).

Поиск пользователя в БД:

Запрос к модели Users для получения записи по email (find()->where(['email' => $email])->first()).

Проверка пароля:

Сравнение хеша пароля из БД с введенным паролем через password_verify().

Проверка блокировки:

Если пользователь не заблокирован (blocked != 1), создается сессия с полями user_id и user_email.

При блокировке выводится ошибка Вы заблокированы.

Редирект:

Успешная аутентификация → перенаправление на Users/home/.

Ошибка → вывод сообщения Неверные данные.

**3. Метод register()
Назначение: Регистрация нового пользователя.
Логика работы:

Проверка типа запроса: Активация только для HTTP POST.

Валидация паролей:

Сравнение полей password и confirm_password (ошибка при несовпадении).

Создание сущности пользователя:

Генерация хеша пароля через password_hash().

Формирование объекта user с полями: email, password (хеш), name, surname, birthday, phone, access_rights=0, created, modified.

Сохранение в БД:

Использование patchEntity() для связывания данных с объектом.

При успешном сохранении → вывод сообщения успешная регистрация и редирект на Users/home.

При ошибке → вывод валидационных ошибок модели.

**4. Метод recovery()
Назначение: Восстановление пароля пользователя.
Логика работы:

Проверка типа запроса: Активация только для HTTP POST.

Поиск пользователя:

Запрос к БД по комбинации email и phone.

Обновление пароля:

Прямое присвоение нового пароля без хеширования (потенциальная уязвимость).

Сохранение данных:

При успехе → сообщение Пароль успешно изменен и редирект на страницу входа.

При ошибке → вывод соответствующего сообщения.